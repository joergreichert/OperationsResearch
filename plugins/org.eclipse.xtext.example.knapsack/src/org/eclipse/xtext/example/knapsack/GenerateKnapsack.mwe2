module org.eclipse.xtext.example.GenerateKnapsack

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*

var grammarURI = "classpath:/org/eclipse/xtext/example/knapsack/Knapsack.xtext"
var fileExtensions = "knapsack"
var projectName = "org.eclipse.xtext.example.knapsack"
var runtimeProject = "../${projectName}"
var testProject = "../../tests/${projectName}.tests"
var generateXtendStub = true

Workflow {
	bean = StandaloneSetup {
		scanClassPath = true
		platformUri = "${runtimeProject}/.."
	}

	component = DirectoryCleaner {  directory = "${runtimeProject}/src-gen"     }
	component = DirectoryCleaner {  directory = "${runtimeProject}/model"       }
	component = DirectoryCleaner {  directory = "${runtimeProject}.ui/src-gen"  }

	component = Generator {
		pathRtProject = runtimeProject
		pathUiProject = "${runtimeProject}.ui"
    	pathTestProject = "${testProject}"
		projectNameRt = projectName
		projectNameUi = "${projectName}.ui"
		encoding = "UTF-8"
		language = auto-inject {
			uri = grammarURI
			fragment = grammarAccess.GrammarAccessFragment auto-inject {}
			fragment = ecore.EMFGeneratorFragment auto-inject {}
			fragment = serializer.SerializerFragment auto-inject {  generateStub = false  }
			fragment = resourceFactory.ResourceFactoryFragment auto-inject {}
			fragment = parser.antlr.XtextAntlrGeneratorFragment auto-inject {}
			fragment = validation.ValidatorFragment auto-inject {}
			fragment = exporting.SimpleNamesFragment auto-inject {}
			fragment = formatting.FormatterFragment auto-inject {}
			fragment = labeling.LabelProviderFragment auto-inject {}
			fragment = outline.OutlineTreeProviderFragment auto-inject {}
			fragment = outline.QuickOutlineFragment auto-inject {}
			fragment = quickfix.QuickfixProviderFragment auto-inject {}
			fragment = contentAssist.ContentAssistFragment auto-inject {}
			fragment = parser.antlr.XtextAntlrUiGeneratorFragment auto-inject {}
    		fragment = junit.Junit4Fragment auto-inject {}
			fragment = templates.CodetemplatesGeneratorFragment auto-inject {}
			fragment = compare.CompareFragment auto-inject {}
		}
	}
}